

<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="yas">
    <xs:annotation>
      <xs:documentation>Os comentarios devem ter espacos no inicio e no fim, a  separar dos hifens  Nao devem ser usados caracteres especiais (p.ex. acentos)  Todas as tags e atributos sao obrigatorios, exceto onde for  referido o contrario  Na descricao abaixo, os simbolos utilizados tem o seguinte significado:  ii: integer value  ff: float value  ss: string value  cc: character "x" or "y" or "z"  tt: "0" or "1" with Boolean significance</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="scene">
          <xs:annotation>
            <xs:documentation>deve definir-se um objeto para raiz da arvore, assim  como o comprimento dos tres eixos (cilindros)</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="root" use="required"/>
                <xs:attribute type="xs:float" name="axis_length" use="required"/>
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="views">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="perspective" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>tem de existir, pelo menos, uma vista de  entre as seguintes (perspective ou ortho)</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="from">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="x" use="required"/>
                            <xs:attribute type="xs:decimal" name="y" use="required"/>
                            <xs:attribute type="xs:decimal" name="z" use="required"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="to">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="x" use="required"/>
                            <xs:attribute type="xs:decimal" name="y" use="required"/>
                            <xs:attribute type="xs:decimal" name="z" use="required"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute type="xs:string" name="id" use="required"/>
                  <xs:attribute type="xs:decimal" name="near" use="required"/>
                  <xs:attribute type="xs:decimal" name="far" use="required"/>
                  <xs:attribute type="xs:decimal" name="angle" use="required"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="ortho" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute type="xs:string" name="id" use="required"/>
                      <xs:attribute type="xs:decimal" name="near" use="required"/>
                      <xs:attribute type="xs:decimal" name="far" use="required"/>
                      <xs:attribute type="xs:decimal" name="left" use="required"/>
                      <xs:attribute type="xs:decimal" name="right" use="required"/>
                      <xs:attribute type="xs:decimal" name="top" use="required"/>
                      <xs:attribute type="xs:decimal" name="bottom" use="required"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute type="xs:string" name="default"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="ambient">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ambient">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute type="xs:float" name="r"/>
                      <xs:attribute type="xs:float" name="g"/>
                      <xs:attribute type="xs:float" name="b"/>
                      <xs:attribute type="xs:decimal" name="a"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
              <xs:element name="background">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute type="xs:float" name="r"/>
                      <xs:attribute type="xs:decimal" name="g"/>
                      <xs:attribute type="xs:decimal" name="b"/>
                      <xs:attribute type="xs:decimal" name="a"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="lights">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="omni">
                <xs:annotation>
                  <xs:documentation>Deve existir um ou mais blocos "omni" ou "spot"  Os identificadores "id" nao podem ser repetidos</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="location">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="x"/>
                            <xs:attribute type="xs:decimal" name="y"/>
                            <xs:attribute type="xs:decimal" name="z"/>
                            <xs:attribute type="xs:decimal" name="w"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ambient">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="r"/>
                            <xs:attribute type="xs:decimal" name="g"/>
                            <xs:attribute type="xs:decimal" name="b"/>
                            <xs:attribute type="xs:decimal" name="a"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="diffuse">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:float" name="r"/>
                            <xs:attribute type="xs:decimal" name="g"/>
                            <xs:attribute type="xs:float" name="b"/>
                            <xs:attribute type="xs:decimal" name="a"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="specular">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:float" name="r"/>
                            <xs:attribute type="xs:decimal" name="g"/>
                            <xs:attribute type="xs:float" name="b"/>
                            <xs:attribute type="xs:decimal" name="a"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute type="xs:string" name="id"/>
                  <xs:attribute type="xs:string" name="enabled"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="spot">
                <xs:annotation>
                  <xs:documentation><![CDATA[<omni id="lo2" enabled="true">
            <location x="5" y="5" z="5" w="0" />
            <ambient r="0" g="1" b="0" a="1" />
            <diffuse r="0" g="0.2" b="0" a="1" />
            <specular r="0" g="0" b="0" a="1" />
        </omni>]]></xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="location">
                      <xs:annotation>
                        <xs:documentation>atencao, "target" e' diferente de "direction"</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="x"/>
                            <xs:attribute type="xs:decimal" name="y"/>
                            <xs:attribute type="xs:decimal" name="z"/>
                            <xs:attribute type="xs:decimal" name="w"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="target">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="x"/>
                            <xs:attribute type="xs:decimal" name="y"/>
                            <xs:attribute type="xs:decimal" name="z"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ambient">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="r"/>
                            <xs:attribute type="xs:decimal" name="g"/>
                            <xs:attribute type="xs:decimal" name="b"/>
                            <xs:attribute type="xs:decimal" name="a"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="diffuse">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="r"/>
                            <xs:attribute type="xs:float" name="g"/>
                            <xs:attribute type="xs:float" name="b"/>
                            <xs:attribute type="xs:decimal" name="a"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="specular">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="r"/>
                            <xs:attribute type="xs:decimal" name="g"/>
                            <xs:attribute type="xs:decimal" name="b"/>
                            <xs:attribute type="xs:decimal" name="a"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute type="xs:string" name="id"/>
                  <xs:attribute type="xs:string" name="enabled"/>
                  <xs:attribute type="xs:float" name="angle"/>
                  <xs:attribute type="xs:decimal" name="exponent"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="textures">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="texture" maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Deve existir um ou mais blocos "texture"  Os identificadores "id" nao podem ser repetidos</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute type="xs:string" name="id" use="optional"/>
                      <xs:attribute type="xs:string" name="file" use="optional"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="materials">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="material" maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Deve existir um ou mais blocos "material"  Os identificadores "id" nao podem ser repetidos  dim grey</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:all>
                    <xs:element name="emission" minOccurs="1" maxOccurs="1">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="r"/>
                            <xs:attribute type="xs:decimal" name="g"/>
                            <xs:attribute type="xs:decimal" name="b"/>
                            <xs:attribute type="xs:decimal" name="a"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ambient" minOccurs="1" maxOccurs="1">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:float" name="r" use="optional"/>
                            <xs:attribute type="xs:float" name="g" use="optional"/>
                            <xs:attribute type="xs:float" name="b" use="optional"/>
                            <xs:attribute type="xs:decimal" name="a" use="optional"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="diffuse" minOccurs="1" maxOccurs="1">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:float" name="r"/>
                            <xs:attribute type="xs:float" name="g"/>
                            <xs:attribute type="xs:float" name="b"/>
                            <xs:attribute type="xs:decimal" name="a"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="specular" minOccurs="1" maxOccurs="1">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="r"/>
                            <xs:attribute type="xs:decimal" name="g"/>
                            <xs:attribute type="xs:decimal" name="b"/>
                            <xs:attribute type="xs:decimal" name="a"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:all>
                  <xs:attribute type="xs:string" name="id" use="required"/>
                  <xs:attribute type="xs:decimal" name="shininess" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="transformations">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="transformation">
                <xs:annotation>
                  <xs:documentation>Deve existir um ou mais blocos "transformation"  Os identificadores "id" nao podem ser repetidos  Os angulos sao expressos em graus</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="translate">
                      <xs:annotation>
                        <xs:documentation>instrucoes a usar sem limite nem ordem  deve existir pelo menos uma transformacao</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="x"/>
                            <xs:attribute type="xs:decimal" name="y"/>
                            <xs:attribute type="xs:decimal" name="z"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="rotate">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:string" name="axis"/>
                            <xs:attribute type="xs:short" name="angle"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="scale">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="x"/>
                            <xs:attribute type="xs:decimal" name="y"/>
                            <xs:attribute type="xs:decimal" name="z"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute type="xs:string" name="id"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="primitives">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="primitive" maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Uma "primitive" e' uma primitiva e pode ser usada em nos folha  Deve existir um ou mais blocos "primitive"  Os identificadores "id" nao podem ser repetidos</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="rectangle" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>apenas pode existir UMA das seguintes tags:  rectangle, triangle, cylinder, sphere, torus  os parametros devem ser interpretados, genericamente,  como em WebGL; o cilindro deve adicionalmente ter tampas</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:float" name="x1"/>
                            <xs:attribute type="xs:float" name="y1"/>
                            <xs:attribute type="xs:float" name="x2"/>
                            <xs:attribute type="xs:float" name="y2"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="triangle" minOccurs="0">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:float" name="x1"/>
                            <xs:attribute type="xs:float" name="y1"/>
                            <xs:attribute type="xs:float" name="z1"/>
                            <xs:attribute type="xs:float" name="x2"/>
                            <xs:attribute type="xs:float" name="y2"/>
                            <xs:attribute type="xs:float" name="z2"/>
                            <xs:attribute type="xs:float" name="x3"/>
                            <xs:attribute type="xs:float" name="y3"/>
                            <xs:attribute type="xs:float" name="z3"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="cylinder" minOccurs="0">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="base"/>
                            <xs:attribute type="xs:decimal" name="top"/>
                            <xs:attribute type="xs:decimal" name="height"/>
                            <xs:attribute type="xs:decimal" name="slices"/>
                            <xs:attribute type="xs:decimal" name="stacks"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="sphere" minOccurs="0">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:decimal" name="radius"/>
                            <xs:attribute type="xs:decimal" name="slices"/>
                            <xs:attribute type="xs:decimal" name="stacks"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="torus" minOccurs="0">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:string" name="inner"/>
                            <xs:attribute type="xs:string" name="outer"/>
                            <xs:attribute type="xs:string" name="slices"/>
                            <xs:attribute type="xs:string" name="loops"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute type="xs:string" name="id" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="components">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="component" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="transformation">
                      <xs:annotation>
                        <xs:documentation>Uma "component" e' um objeto composto e pode ser  usada em nos intermédios  bloco "transformation" e' obrigatorio  ou, ALTERNATIVAMENTE, transformacoes explicitas,  usando zero ou mais das instrucoes seguintes, sem  limite nem ordem  ex: bloco transformation pode ficar sem conteudo &lt;translate x="ff" y="ff" z="ff" />
                &lt;rotate axis="cc" angle="ff" />
                &lt;scale x="ff" y="ff" z="ff" /></xs:documentation>
                      </xs:annotation>
                      <xs:complexType mixed="true">
                        <xs:sequence>
                          <xs:element name="rotate" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute type="xs:string" name="axis" use="optional"/>
                                  <xs:attribute type="xs:short" name="angle" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="scale" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute type="xs:float" name="x"/>
                                  <xs:attribute type="xs:decimal" name="y"/>
                                  <xs:attribute type="xs:float" name="z"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="translate" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute type="xs:decimal" name="x" use="optional"/>
                                  <xs:attribute type="xs:float" name="y" use="optional"/>
                                  <xs:attribute type="xs:float" name="z" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="transformationref" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>deve conter uma referencia a uma das "transformation"  declaradas anteriormente</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute type="xs:string" name="id"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="materials">
                      <xs:annotation>
                        <xs:documentation>declaracao obrigatoria de pelo menos um material;  o material id="inherit", mantem (herda) material do "pai"  se varios materiais declarados, o default e' o  primeiro material; de cada vez que se pressione a tecla m/M,  o material muda para o proximo material da lista; do  ultimo material da lista volta ao primeiro</xs:documentation>
                      </xs:annotation>
                      <xs:complexType mixed="true">
                        <xs:sequence>
                          <xs:element name="materialref" minOccurs="1" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute type="xs:string" name="id" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="texture">
                      <xs:annotation>
                        <xs:documentation>declaracao obrigatoria de texture  id="inherit" mantem (herda) a textura do objecto "pai"  id="none" remove a textura recebida do pai  a textura declarada sobrepoe a textura recebida do  objecto "pai"  length_s e length_t sao fatores de escala de textura: Exemplo length_s=3.0: uma ocorrencia da textura, em  comprimento, deve cobrir um comprimento igual  a 3 unidades;  Exemplo length_t=0.4, uma ocorrencia da textura, em  largura, deve cobrir uma largura igual a 0.4 unidades.  E' permitido que objetos afetados por Transf. Geometr.  do tipo escalamento violem esta regra.  Nao e' necessario aplicar fatores de escala em  quadricas (esfera, cilindro...)</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:string" name="id" use="optional"/>
                            <xs:attribute type="xs:decimal" name="length_s" use="optional"/>
                            <xs:attribute type="xs:decimal" name="length_t" use="optional"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="children">
                      <xs:annotation>
                        <xs:documentation>bloco "children" obrigatorio num "component"</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="primitiveref" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>deve existir uma ou mais tags "componentref" e/ou  "primitiveref", identificando outros  componentes ou primitivas &lt;componentref id="cccref1" /></xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute type="xs:string" name="id" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="componentref" maxOccurs="unbounded" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute type="xs:string" name="id" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute type="xs:string" name="id" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>

